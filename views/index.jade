extends layout

block content
  p Welcome to #{title}
  
  div.row
    div.col-md-3.col-sm-6.col-xs-12
      div.info-box
        span.info-box-icon.bg-green
          i.fa.fa-android
        div.info-box-content
          span.info-box-text 安卓版本
          span.info-box-number 4.4.2
    div.col-md-3.col-sm-6.col-xs-12
      div.info-box
        span.info-box-icon.bg-aqua
          i.fa.fa-barcode
        div.info-box-content
          span.info-box-text 序列号
          span.info-box-number xxxxx
    
  h2 硬件信息
  div.box.box-solid
    div.box-header
      i.fa.fa-bar-chart-o
    div.box-body
      div.row
        div.col-md-3.col-xs-6.text-center
          input#cpu.knob(type="text", value="0", data-fgcolor="#3c8dbc", data-width="90", data-height="90", data-readonly="true")
          div.knob-label CPU使用率(%)
  
  
block script
  script(src="/plugins/knob/jquery.knob.js")
  script.
    $(function () {
    /* jQueryKnob */

      $(".knob").knob({
      //-   change : function (value) {
      //-    console.log("change : " + value);
      //-   },
         /*
         release : function (value) {
         console.log("release : " + value);
         },
         cancel : function () {
         console.log("cancel : " + this.value);
         },*/
        draw: function () {

          // "tron" case
          if (this.$.data('skin') == 'tron') {

            var a = this.angle(this.cv)  // Angle
                , sa = this.startAngle          // Previous start angle
                , sat = this.startAngle         // Start angle
                , ea                            // Previous end angle
                , eat = sat + a                 // End angle
                , r = true;

            this.g.lineWidth = this.lineWidth;

            this.o.cursor
            && (sat = eat - 0.3)
            && (eat = eat + 0.3);

            if (this.o.displayPrevious) {
              ea = this.startAngle + this.angle(this.value);
              this.o.cursor
              && (sa = ea - 0.3)
              && (ea = ea + 0.3);
              this.g.beginPath();
              this.g.strokeStyle = this.previousColor;
              this.g.arc(this.xy, this.xy, this.radius - this.lineWidth, sa, ea, false);
              this.g.stroke();
            }

            this.g.beginPath();
            this.g.strokeStyle = r ? this.o.fgColor : this.fgColor;
            this.g.arc(this.xy, this.xy, this.radius - this.lineWidth, sat, eat, false);
            this.g.stroke();

            this.g.lineWidth = 2;
            this.g.beginPath();
            this.g.strokeStyle = this.o.fgColor;
            this.g.arc(this.xy, this.xy, this.radius - this.lineWidth + 1 + this.lineWidth * 2 / 3, 0, 2 * Math.PI, false);
            this.g.stroke();

            return false;
          }
        }
      });
    });
  script.
    //- $(document).ready(function(){
    //-   $("#b01").click(function(){
    //-     $("#cpu").val("50");
    //-     $("#cpu").trigger('change');
    //-   });
    //- });
    var timer = setInterval("getCPU()",2*1000);
    getCPU();
    function getCPU(){
      $.ajax({
        url:"/cpu",
        //datatype:"text",
        success:function(data){
          $("#cpu").val(data);
          $("#cpu").trigger('change');
        },
        error:function(object, err){
          console.log(err);
        }
      });
    }
